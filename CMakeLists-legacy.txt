cmake_minimum_required(VERSION 2.8)
project(GUT_Manycore_Architectures_MCTS)

find_package(MPI REQUIRED)
include_directories(${MPI_INCLUDE_PATH})

# Can be DEV or G1UT
set(LOCATION NDEV)
if(LOCATION STREQUAL DEV)
    # In dev enviorment we don't need no fancy switches, we can safely use c++ 11
    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=c++11")
else()
    # On GUT machine we want to compile to Xeon Phi device, c++0x is best we get
    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -mmic -DMPICH_IGNORE_CXX_SEEK -std=c++0x")
endif()

set(SOURCE_FILES
        distributed-implementation/legacy-first-attempt/main.cpp
        distributed-implementation/legacy-first-attempt/MctsNode.h
        distributed-implementation/legacy-first-attempt/MctsNode.cpp
        distributed-implementation/legacy-first-attempt/MctsNodeDeserializer.h
        distributed-implementation/legacy-first-attempt/MctsNodeDeserializer.cpp
        distributed-implementation/legacy-first-attempt/MctsNodeSerializer.h
        distributed-implementation/legacy-first-attempt/MctsNodeSerializer.cpp
        distributed-implementation/legacy-first-attempt/MctsTreeMerger.h
        distributed-implementation/legacy-first-attempt/MctsTreeMerger.cpp
        distributed-implementation/legacy-first-attempt/NimGameState.h
        distributed-implementation/legacy-first-attempt/NimGameState.cpp
        distributed-implementation/legacy-first-attempt/UctSortMcts.h
        distributed-implementation/legacy-first-attempt/UctSortMcts.cpp)

add_executable(GUT_Manycore_Architectures_MCTS ${SOURCE_FILES})
target_link_libraries(GUT_Manycore_Architectures_MCTS ${MPI_LIBRARIES})

set(CMAKE_RUNTIME_OUTPUT_DIRECTORY "distributed-implementation/runnable/")
set(CMAKE_CXX_FLAGS_DEBUG "${CMAKE_CXX_FLAGS_DEBUG} -Wall")
if(MPI_COMPILE_FLAGS)
    set_target_properties(GUT_Manycore_Architectures_MCTS PROPERTIES
            COMPILE_FLAGS "${MPI_COMPILE_FLAGS}")
endif()

if(MPI_LINK_FLAGS)
    set_target_properties(GUT_Manycore_Architectures_MCTS PROPERTIES
            LINK_FLAGS "${MPI_LINK_FLAGS}")
endif()
